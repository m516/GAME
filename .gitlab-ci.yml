# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

stages:
  - build
  - test
  - mavenbuild
  - maventest

image: gcc

build:
  stage: build
  tags:
    - c++_tag
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script:
    - apt update -y
    - apt upgrade -y
    - apt -y install make autoconf git openssh-server cmake libsfml-dev
  script:
    - cd client
    - make
  artifacts:
    paths:
      - client/main
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  tags:
    - c++_tag
  stage: test
  script:
    - export LD_LIBRARY_PATH=/usr/local/lib
    - client/main

maven-build: 
  stage: mavenbuild
  tags:
    - shell
  script:
    - cd GameProject.zip_expanded/GameProject
    - mvn package -B

maven-test:
  stage: maventest
  tags: 
    - shell
  script: 
    - cd GameProject.zip_expanded/GameProject
    - mvn test
  artifacts: 
    paths:
      - GameProject.zip_expanded/GameProject/target/*.jar